#!/bin/sh /etc/rc.common
START=93

LOG_FILE="/tmp/jmusupplicant.log"

run_jmusupplicant()
{
    local enable
    local username
    local password
    local ifname
    local netoperator
    local cmd
    config_get_bool enable $1 enable
    config_get username $1 username
    config_get password $1 password
    config_get netoperator $1 netoperator
    config_get ifname $1 ifname

    echo "Enable        : $enable" > $LOG_FILE
    echo "Username      : $username" >> $LOG_FILE
	echo "Services      : $netoperator" >> $LOG_FILE
    echo "Interface Card: $ifname" >> $LOG_FILE

    if [ $enable ] && [ $username ] && [ $password ] && [ $ifname ] && [ $netoperator ]; then
        local pinghost
        local ipaddr
        local mask
        local gateway
        local dns
        local midnight
        local cronset

        config_get pinghost $1 pinghost
        config_get ipaddr $1 ipaddr
        config_get mask $1 mask
        config_get gateway $1 gateway
        config_get dns $1 dns
        config_get_bool midnight $1 midnight
        config_get_bool cronset $1 cronset

        echo "IPaddr        : $ipaddr" >> $LOG_FILE
        echo "Mask          : $mask" >> $LOG_FILE
        echo "Gateway       : $gateway" >> $LOG_FILE
        echo "DNS Server    : $dns" >> $LOG_FILE
        echo "Midnight Mode : $midnight" >> $LOG_FILE
        
        if [ "$ipaddr" != "0.0.0.0" ] && [ "$ipaddr" != "" ]; then cmd=$cmd" --ip "$ipaddr;fi
        if [ "$mask" != "0.0.0.0" ] && [ "$mask" != "" ]; then cmd=$cmd" --mask "$mask;fi
        if [ "$gateway" != "0.0.0.0" ] &&  [ "$gateway" != "" ]; then cmd=$cmd" -g"$gateway;fi
        if [ "$dns" != "0.0.0.0" ] &&  [ "$dns" != "" ]; then cmd=$cmd" -d"$dns;fi
        if [ $midnight ]; then cmd=$cmd" -n";fi

        echo "AUTH START" >> $LOG_FILE

        if [ $midnight ]; then
            interval=15
            duration=360
            start_time=$(date +%s)
            end_time=$((start_time + duration))
            current_time=$start_time

            while [ $current_time -lt $end_time ]; do
                ping -c1 -w1 $pinghost >/dev/null 2>&1
                if [ $? -ne 0 ]; then
                    /bin/ash -c "jmusupplicant -k"
                    while (1); do
                        /bin/ash -c "jmusupplicant -u$username -p$password -b -s$netoperator --interface_card $ifname $cmd"
                        if [ $? -eq 0 ]; then
                            break
                        fi
                    done
                fi
                sleep $interval
                current_time=$(date +%s)
            done
        else
            /bin/ash -c "jmusupplicant -k"
            while (1); do
                /bin/ash -c "jmusupplicant -u$username -p$password -b -s$netoperator --interface_card $ifname $cmd"
                if [ $? -eq 0 ]; then
                    break
                fi
            done
        fi

        echo "AUTH END" >> $LOG_FILE

        crontab_file="/etc/crontabs/root"
	    touch $crontab_file
	    if [ $enable ] && [ $cronset ]; then
		    echo "Cronset: Configure"
            sed -i '/jmusupplicant/d' $crontab_file
		    echo "10 6 * * * sed -i 's/midnight '\''1'\''/midnight '\''0'\''/' '/etc/config/jmusupplicant' " >> $crontab_file
            echo "10 6 * * * /etc/init.d/jmusupplicant restart" >> $crontab_file
            echo "0 23 * * 0-4 sed -i 's/midnight '\''0'\''/midnight '\''1'\''/' '/etc/config/jmusupplicant' " >> $crontab_file
            echo "0 23 * * 0-4 /etc/init.d/jmusupplicant restart" >> $crontab_file
            echo "59 23 * * 5,6 sed -i 's/midnight '\''0'\''/midnight '\''1'\''/' '/etc/config/jmusupplicant' " >> $crontab_file
            echo "59 23 * * 5,6 /etc/init.d/jmusupplicant restart" >> $crontab_file
		    crontab $crontab_file
	    else
            echo "Cronset: Removing"
		    sed -i '/jmusupplicant/d' $crontab_file
		    crontab $crontab_file
	    fi
    else
        /bin/ash -c "jmusupplicant -k"
    fi
}

start()
{
    config_load jmusupplicant
    config_foreach run_jmusupplicant jmusupplicant
}

stop()
{
    killall jmusupplicant
}

restart()
{
    jmusupplicant -k
    sleep 1
    config_load jmusupplicant
    config_foreach run_jmusupplicant jmusupplicant
}
